Table - person:
    1.
    CREATE TABLE person (
        person_id SERIAL PRIMARY KEY,
        name VARCHAR(200),
        age INTEGER,
        height INTEGER,
        city VARCHAR(200),
        favorite_color VARCHAR(200)
    );

    2.
    INSERT INTO person (name, age, height, city, favorite_color);
    VALUES ('Amy', 20, 150, 'Minneapolis', 'red');

    INSERT INTO person (name, age, height, city, favorite_color);
    VALUES ('Bob', 21, 170, 'Boston', 'black');

    INSERT INTO person (name, age, height, city, favorite_color);
    VALUES ('lauren', 18, 155, 'Atlanta', 'yellow');

    INSERT INTO person (name, age, height, city, favorite_color);
    VALUES ('James', 33, 150, 'Miami', 'brown');

    INSERT INTO person (name, age, height, city, favorite_color);
    VALUES ('Mary', 33, 150, 'Los Angeles', 'white');

    3.
    SELECT * FROM person ORDER BY height ASC;

    4.
    SELECT * FROM person ORDER BY height DSC;

    5.
    SELECT * FROM person ORDER BY age DESC;

    6.
    SELECT * FROM person WHERE age > 20;

    7. 
    SELECT * FROM person WHERE age = 18;

    8.
    SELECT * FROM person WHERE age < 20 OR age > 30;

    9.
    SELECT * FROM person WHERE age != 27;

    10.
    SELECT * FROM person WHERE favorite_color != 'red';

    11.
    SELECT * FROM person WHERE favorite_color != 'red' AND favorite_color != 'blue';

    12.
    SELECT * FROM person WHERE favorite_color = 'orange' OR favorite_color = 'green';

    13.
    SELECT * FROM person WHERE favorite_color IN ('orange', 'green', 'blue');

    14.
    SELECT * FROM person WHERE favorite_color IN ( 'yellow', 'purple' );


Table - orders:
    1.
    CREATE TABLE orders ( 
        order_id SERIAL PRIMARY KEY, 
        person_id INTEGER, 
        product_name VARCHAR(200), 
        product_price FLOAT,
        quantity INTEGER
    );

    2.
    INSERT INTO orders (person_id, product_name, product_price, quantity)
    VALUES (1, 'shoes', 99.99, 6)

    INSERT INTO orders (person_id, product_name, product_price, quantity)
    VALUES (1, 'pants', 59.99, 2)

    INSERT INTO orders (person_id, product_name, product_price, quantity)
    VALUES (2, 'shirts', 29.99, 2)

    INSERT INTO orders (person_id, product_name, product_price, quantity)
    VALUES (3, 'hats', 49.99, 8)

    INSERT INTO orders (person_id, product_name, product_price, quantity)
    VALUES (2, 'jackets', 149.99, 1)

    3.
    SELECT * FROM orders;

    4.
    SELECT SUM(quantity) FROM orders;

    5.
    SELECT SUM(product_price * quantity) FROM orders;

    6. 
    SELECT SUM(product_price * quantity) FROM orders WHERE person_id = 1;

Table - artist:
    1.
    INSERT INTO artist (name)
    VALUES ('Bon Jovi');

    INSERT INTO artist (name)
    VALUES ('J');

    INSERT INTO artist (name)
    VALUES ('Snoop Dogg');

    INSERT INTO artist (name)
    VALUES ('stig');

    INSERT INTO artist (name)
    VALUES ('Neat');

    2.
    SELECT * FROM artist ORDER BY name DESC LIMIT 10;

    3.
    SELECT * FROM artist ORDER BY name ASC LIMIT 5;

    4.
    SELECT * FROM artist WHERE name LIKE 'Black%';

    5.
    SELECT * FROM artist WHERE name LIKE '%Black%';


Table - employee:
    1.
    SELECT first_name, last_name FROM employee WHERE city = 'Calgary';

    2.
    SELECT MAX(birth_date) from employee;

    3.
    SELECT MIN(birth_date) from employee;

    4.
    SELECT * FROM employee WHERE reports_to = 2;

    5.
    SELECT COUNT(*) FROM employee WHERE city = 'Lethbridge';


Table - invoice:
    1.
    SELECT COUNT(*) FROM invoice WHERE billing_country = 'USA';

    2.
    SELECT MAX(total) FROM invoice;

    3.
    SELECT MIN(total) FROM invoice;

    4.
    SELECT * FROM invoice WHERE total > 5;

    5.
    SELECT COUNT(*) FROM invoice WHERE total < 5;

    6.
    SELECT COUNT(*) FROM invoice WHERE billing_state in ('CA', 'TX', 'AZ');

    7.
    SELECT AVG(total) FROM invoice;

    8.
    SELECT SUM(total) FROM invoice;
